<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ch.vhr.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.ch.vhr.model.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="idCard" property="idCard" jdbcType="CHAR"/>
        <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
        <result column="nationId" property="nationId" jdbcType="INTEGER"/>
        <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR"/>
        <result column="politicId" property="politicId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="departmentId" property="departmentId" jdbcType="INTEGER"/>
        <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER"/>
        <result column="posId" property="posId" jdbcType="INTEGER"/>
        <result column="engageForm" property="engageForm" jdbcType="VARCHAR"/>
        <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="beginDate" property="beginDate" jdbcType="DATE"/>
        <result column="workState" property="workState" jdbcType="CHAR"/>
        <result column="workID" property="workID" jdbcType="CHAR"/>
        <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE"/>
        <result column="conversionTime" property="conversionTime" jdbcType="DATE"/>
        <result column="notWorkDate" property="notWorkDate" jdbcType="DATE"/>
        <result column="beginContract" property="beginContract" jdbcType="DATE"/>
        <result column="endContract" property="endContract" jdbcType="DATE"/>
        <result column="workAge" property="workAge" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="AllEmployeeInfo" type="com.ch.vhr.model.Employee" extends="BaseResultMap">
        <association property="nation" javaType="com.ch.vhr.model.Nation">
            <id column="nid" property="id"/>
            <result column="nname" property="name"/>
        </association>
        <association property="politicsstatus" javaType="com.ch.vhr.model.Politicsstatus">
            <id column="pid" property="id"/>
            <result column="pname" property="name"/>
        </association>
        <association property="department" javaType="com.ch.vhr.model.Department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
        <association property="position" javaType="com.ch.vhr.model.Position">
            <id column="posid" property="id"/>
            <result column="posname" property="name"/>
        </association>
        <association property="jobLevel" javaType="com.ch.vhr.model.JobLevel">
            <id column="jid" property="id"/>
            <result column="jname" property="name"/>
        </association>
    </resultMap>
    <resultMap id="EmployeeWithSalary" type="com.ch.vhr.model.Employee" extends="BaseResultMap">
        <association property="salary" javaType="com.ch.vhr.model.Salary">
            <id column="sid" property="id" jdbcType="INTEGER"/>
            <result column="sbasicSalary" property="basicSalary" jdbcType="INTEGER"/>
            <result column="sbonus" property="bonus" jdbcType="INTEGER"/>
            <result column="slunchSalary" property="lunchSalary" jdbcType="INTEGER"/>
            <result column="strafficSalary" property="trafficSalary" jdbcType="INTEGER"/>
            <result column="sallSalary" property="allSalary" jdbcType="INTEGER"/>
            <result column="spensionBase" property="pensionBase" jdbcType="INTEGER"/>
            <result column="spensionPer" property="pensionPer" jdbcType="REAL"/>
            <result column="screateDate" property="createDate" jdbcType="TIMESTAMP"/>
            <result column="smedicalBase" property="medicalBase" jdbcType="INTEGER"/>
            <result column="smedicalPer" property="medicalPer" jdbcType="REAL"/>
            <result column="saccumulationFundBase" property="accumulationFundBase" jdbcType="INTEGER"/>
            <result column="saccumulationFundPer" property="accumulationFundPer" jdbcType="REAL"/>
            <result column="sname" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="department" javaType="com.ch.vhr.model.Department">
            <result column="dname" property="name"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email,
    phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, 
    school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
    </sql>

    <select id="getEmployeeByPageWithSalary" resultMap="EmployeeWithSalary">
        SELECT
        e.*,
        d.`name` AS dname,
        s.`id` AS sid,
        s.`accumulationFundBase` AS saccumulationFundBase,
        s.`accumulationFundPer` AS saccumulationFundPer,
        s.`allSalary` AS sallSalary,
        s.`basicSalary` AS sbasicSalary,
        s.`bonus` AS sbonus,
        s.`createDate` AS screateDate,
        s.`lunchSalary` AS slunchSalary,
        s.`medicalBase` AS smedicalBase,
        s.`medicalPer` AS smedicalPer,
        s.`name` AS sname,
        s.`pensionBase` AS spensionBase,
        s.`pensionPer` AS spensionPer,
        s.`trafficSalary` AS strafficSalary
        FROM
        employee e
        LEFT JOIN empsalary es ON e.`id` = es.`eid`
        LEFT JOIN salary s ON es.`sid` = s.`id`
        LEFT JOIN department d ON e.`departmentId` = d.`id`
        ORDER BY
        e.id
        <if test="page !=null and size !=null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getMaxWorkID" resultType="java.lang.Integer">
        select max(workID)
        from employee;
    </select>
    <select id="getEmployeeById" resultMap="AllEmployeeInfo">
        SELECT e.*,
               p.id       AS pid,
               p.`name`   AS pname,
               n.id       AS nid,
               n.NAME     AS nname,
               d.id       AS did,
               d.`name`   AS dname,
               j.id       AS jid,
               j.`name`   AS jname,
               pos.id     AS posid,
               pos.`name` AS posname
        FROM employee e,
             nation n,
             politicsstatus p,
             department d,
             joblevel j,
             position pos
        WHERE e.nationId = n.id
          AND e.politicId = p.id
          AND e.departmentId = d.id
          AND e.jobLevelId = j.id
          AND e.posId = pos.id
          AND e.id = #{id}

    </select>
    <select id="getEmployeeByPage" resultMap="AllEmployeeInfo">
        SELECT e.*,
        p.id AS pid,
        p.`name` AS pname,
        n.id AS nid,
        n.NAME AS nname,
        d.id AS did,
        d.`name` AS dname,
        j.id AS jid,
        j.`name` AS jname,
        pos.id AS posid,
        pos.`name` AS posname
        FROM employee e,
        nation n,
        politicsstatus p,
        department d,
        joblevel j,
        position pos
        WHERE e.nationId = n.id
        AND e.politicId = p.id
        AND e.departmentId = d.id
        AND e.jobLevelId = j.id
        AND e.posId = pos.id
        <if test="keywords != null and keywords != ''">
            AND e.name like concat('%',#{keywords},'%')
        </if>
        LIMIT #{page}
        , #{size}
    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from employee
        <if test="keywords != null and keywords != ''">
            WHERE name like concat('%',#{keywords},'%')
        </if>
    </select>
    <insert id="updateEmployeeSalaryById">
        REPLACE INTO empsalary (eid,sid) VALUES(#{eid},#{sid})
    </insert>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from employee
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ch.vhr.model.Employee">
        insert into employee (id, name, gender,
                              birthday, idCard, wedlock, nationId,
                              nativePlace, politicId, email,
                              phone, address, departmentId,
                              jobLevelId, posId, engageForm,
                              tiptopDegree, specialty, school,
                              beginDate, workState, workID,
                              contractTerm, conversionTime, notWorkDate,
                              beginContract, endContract, workAge)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
                #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR},
                #{nationId,jdbcType=INTEGER},
                #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
                #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR},
                #{tiptopDegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
                #{beginDate,jdbcType=DATE}, #{workState,jdbcType=CHAR}, #{workID,jdbcType=CHAR},
                #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notWorkDate,jdbcType=DATE},
                #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ch.vhr.model.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="idCard != null">
                idCard,
            </if>
            <if test="wedlock != null">
                wedlock,
            </if>
            <if test="nationId != null">
                nationId,
            </if>
            <if test="nativePlace != null">
                nativePlace,
            </if>
            <if test="politicId != null">
                politicId,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="departmentId != null">
                departmentId,
            </if>
            <if test="jobLevelId != null">
                jobLevelId,
            </if>
            <if test="posId != null">
                posId,
            </if>
            <if test="engageForm != null">
                engageForm,
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree,
            </if>
            <if test="specialty != null">
                specialty,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="beginDate != null">
                beginDate,
            </if>
            <if test="workState != null">
                workState,
            </if>
            <if test="workID != null">
                workID,
            </if>
            <if test="contractTerm != null">
                contractTerm,
            </if>
            <if test="conversionTime != null">
                conversionTime,
            </if>
            <if test="notWorkDate != null">
                notWorkDate,
            </if>
            <if test="beginContract != null">
                beginContract,
            </if>
            <if test="endContract != null">
                endContract,
            </if>
            <if test="workAge != null">
                workAge,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                #{workState,jdbcType=CHAR},
            </if>
            <if test="workID != null">
                #{workID,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                #{workAge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ch.vhr.model.Employee">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                idCard = #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                wedlock = #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                nationId = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                nativePlace = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                politicId = #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                departmentId = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                jobLevelId = #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                posId = #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                engageForm = #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                specialty = #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                beginDate = #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                workState = #{workState,jdbcType=CHAR},
            </if>
            <if test="workID != null">
                workID = #{workID,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                contractTerm = #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                conversionTime = #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                notWorkDate = #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                beginContract = #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                endContract = #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                workAge = #{workAge,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ch.vhr.model.Employee">
        update employee
        set name           = #{name,jdbcType=VARCHAR},
            gender         = #{gender,jdbcType=CHAR},
            birthday       = #{birthday,jdbcType=DATE},
            idCard         = #{idCard,jdbcType=CHAR},
            wedlock        = #{wedlock,jdbcType=CHAR},
            nationId       = #{nationId,jdbcType=INTEGER},
            nativePlace    = #{nativePlace,jdbcType=VARCHAR},
            politicId      = #{politicId,jdbcType=INTEGER},
            email          = #{email,jdbcType=VARCHAR},
            phone          = #{phone,jdbcType=VARCHAR},
            address        = #{address,jdbcType=VARCHAR},
            departmentId   = #{departmentId,jdbcType=INTEGER},
            jobLevelId     = #{jobLevelId,jdbcType=INTEGER},
            posId          = #{posId,jdbcType=INTEGER},
            engageForm     = #{engageForm,jdbcType=VARCHAR},
            tiptopDegree   = #{tiptopDegree,jdbcType=CHAR},
            specialty      = #{specialty,jdbcType=VARCHAR},
            school         = #{school,jdbcType=VARCHAR},
            beginDate      = #{beginDate,jdbcType=DATE},
            workState      = #{workState,jdbcType=CHAR},
            workID         = #{workID,jdbcType=CHAR},
            contractTerm   = #{contractTerm,jdbcType=DOUBLE},
            conversionTime = #{conversionTime,jdbcType=DATE},
            notWorkDate    = #{notWorkDate,jdbcType=DATE},
            beginContract  = #{beginContract,jdbcType=DATE},
            endContract    = #{endContract,jdbcType=DATE},
            workAge        = #{workAge
      ,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>